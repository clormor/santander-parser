buildscript {
  repositories {
    maven {
      url "http://dl.bintray.com/palantir/releases"
    }
  }
  dependencies {
    classpath 'com.palantir:gradle-gitsemver:0.7.3'
  }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven'
    id 'signing'
    id 'org.inferred.processors' version '2.1.0'
    id 'com.palantir.circle.style' version '1.1.4'
    id "eu.t-systems-mms.git-semver" version "0.1.0"
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
group = 'io.github.clormor'

apply plugin: 'gitsemver'
version semverVersion()

def isSnapshot() {
  return project.version =~ /.*g[-+.]?[a-fA-F0-9]{3,}/
}

ext."signing.keyId" = "$System.env.MAVEN_SIGN_KEY_ID"
ext."signing.secretKeyRingFile" = "$System.env.MAVEN_SIGN_KEY_FILE"
ext."signing.password" = "$System.env.MAVEN_SIGN_KEY_PASSWORD"

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output + configurations.testCompile
        runtimeClasspath += output + compileClasspath + configurations.testRuntime
    }
}

dependencies {
    compile "com.google.guava:guava:$guavaVersion"
    compile "joda-time:joda-time:$jodaTimeVersion"
    compile "org.apache.pdfbox:pdfbox:$pdfBoxVersion"
    implementation "org.immutables:value-annotations:$immutablesVersion"
    annotationProcessor "org.immutables:value:$immutablesVersion"
	testCompile "junit:junit:$junitVersion"
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
        scopes.TEST.plus += [ configurations.integrationTestCompile ]
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
        scopes.PROVIDED.plus += [configurations.compileOnly]
        iml {
            whenMerged { module ->
                def compileDeps = module.dependencies.findAll { it.scope == 'COMPILE' }
                compileDeps*.exported = true
            }
        }
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}

check.dependsOn integrationTest

task sourcesJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: "$System.env.MAVEN_USER", password: "$System.env.MAVEN_PASSWORD")
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: "$System.env.MAVEN_USER", password: "$System.env.MAVEN_PASSWORD")
      }

      pom.project {
        name 'Santander Parser'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'Library for parsing UK Santander bank and credit card statements'
        url 'https://github.com/clormor/santander-parser'

        scm {
          connection 'git@github.com:clormor/santander-parser.git'
          developerConnection 'git@github.com:clormor/santander-parser.git'
          url 'https://github.com/clormor/santander-parser'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'clormor'
            name 'Chris Lormor'
            email 'cdlormor@gmail.com'
          }
        }
      }
    }
  }
}

