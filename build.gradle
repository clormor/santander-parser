buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.20.0'
    classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
  }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'findbugs'
    id 'eclipse'
    id 'idea'
    id 'maven'
    id 'signing'
    id 'org.inferred.processors' version '2.1.0'
    id 'com.palantir.circle.style' version '1.1.4'
    id 'net.researchgate.release' version '2.8.0'
}

apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'

ext.nexusUsername = "$System.env.NEXUS_USER"
ext.nexusPassword = "$System.env.NEXUS_PASSWORD"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
group = 'io.github.clormor'

ext.'signing.keyId' = "$System.env.NEXUS_KEY_ID"
ext.'signing.secretKeyRingFile' = "$System.env.NEXUS_KEY_FILE"
ext.'signing.password' = "$System.env.NEXUS_KEY_PASSWORD"

repositories {
    mavenCentral()
}

dependencies {
    compile "com.google.guava:guava:$guavaVersion"
    compile "joda-time:joda-time:$jodaTimeVersion"
    compile "org.apache.pdfbox:pdfbox:$pdfBoxVersion"
    compileOnly 'com.google.code.findbugs:annotations:3.0.1'
    testCompileOnly 'com.google.code.findbugs:annotations:3.0.1'
    implementation "org.immutables:value-annotations:$immutablesVersion"
    annotationProcessor "org.immutables:value:$immutablesVersion"
	testCompile "junit:junit:$junitVersion"
}

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
        scopes.PROVIDED.plus += [configurations.compileOnly]
        iml {
            whenMerged { module ->
                def compileDeps = module.dependencies.findAll { it.scope == 'COMPILE' }
                compileDeps*.exported = true
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}

check.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

release {
    git {
        requireBranch = 'develop'
        pushReleaseVersionBranch = 'release'
    }
}

nexusStaging {
    delayBetweenRetriesInMillis = 5000
}

modifyPom {
    project {
        name 'Santander Parser'
        description 'Java library for parsing Santander UK bank and credit card statements.'
        url 'https://github.com/clormor/statements-parser'
        inceptionYear '2019'

        scm {
            url 'https://github.com/clormor/statements-parser'
            connection 'git@github.com:clormor/statements-parser.git'
            developerConnection 'git@github.com:clormor/statements-parser.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'clormor'
                name 'Chris Lormor'
                email 'cdlormor@gmail.com'
            }
        }
    }
}

